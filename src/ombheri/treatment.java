/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ombheri;
import java.awt.BorderLayout;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import static ombheri.activity.regMain;

/**
 *
 * @author Lanaya
 */
public class treatment extends javax.swing.JFrame {

    /**
     * Creates new form treatment
     */
    JTable tableTreat;
    
   
    public void tableRun() throws Exception{
        String sql="select * from treatment;";
        sqlConn sc=new sqlConn();
        ResultSet rs = sc.stmt.executeQuery(sql);

        // It creates and displays the table
        tableTreat = new JTable(buildTableModel(rs));
               
        tableTreat.setBounds(20,50, 400, 620);
        tableTreat.setFont(new Font("Serif", Font.TRUETYPE_FONT, 16));
        tableTreat.setRowHeight(30);
        tableTreat.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        tableTreat.setShowGrid(true);
        

        JScrollPane sp=new JScrollPane(tableTreat, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        sp.setBounds(20, 50, 400, 600);
        this.add(sp);        
        
    }
    
    public static DefaultTableModel buildTableModel(ResultSet rs) throws SQLException {

        ResultSetMetaData metaData = rs.getMetaData();

        // names of columns
        Vector<String> columnNames = new Vector<String>();
        int columnCount = metaData.getColumnCount();

            columnNames.add("Treatment");
     
        // data of the table
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }

        return new DefaultTableModel(data, columnNames);

    }
    
    
    public treatment() {
        try{
            tableRun();
            
        }catch(Exception e){
            System.out.println(e);
        }
        this.setTitle("Treatment List");
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                jLabel6 = new javax.swing.JLabel();
                btnAdd = new javax.swing.JButton();
                btnEdit = new javax.swing.JButton();
                btnDel = new javax.swing.JButton();

                setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
                setPreferredSize(new java.awt.Dimension(589, 680));
                setResizable(false);

                jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
                jLabel6.setText("Treatment Lists");

                btnAdd.setText("Add");
                btnAdd.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnAddActionPerformed(evt);
                        }
                });

                btnEdit.setText("Edit");
                btnEdit.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnEditActionPerformed(evt);
                        }
                });

                btnDel.setBackground(new java.awt.Color(255, 102, 102));
                btnDel.setText("Delete");
                btnDel.setPreferredSize(new java.awt.Dimension(51, 23));
                btnDel.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnDelActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                                        .addComponent(btnDel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(98, Short.MAX_VALUE))
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(522, Short.MAX_VALUE))
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String x=null;
        sqlConn sc=new sqlConn();
      
        JTextField treatText = new JTextField(15);
       
        JPanel addPanel = new JPanel();
        addPanel.add(new JLabel("Treatment:"));
        addPanel.add(treatText);

        int result = JOptionPane.showConfirmDialog(null, addPanel, 
                 "Add Treatment", JOptionPane.OK_CANCEL_OPTION);
        
        if (result == JOptionPane.OK_OPTION) {
            x=treatText.getText();
            String sqlTreat="insert into treatment values('"+x+"');";
            System.out.println(x);
            
            try{
                sc.stmt.executeUpdate(sqlTreat);
                System.out.println("Successfully entered data");
                this.dispose();
                treatment t=new treatment();
                t.setVisible(true);
                JOptionPane.showMessageDialog(null, "Successfully entered data");
                

            }catch(Exception e){
                System.out.println(e);
                String message = "\"Error\"\n"
                + "\"Value is incorrect or too long\"\n";
                JOptionPane.showMessageDialog(new JFrame(), message, "Dialog",
                JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        try{
            String x;

            String treatVal=tableTreat.getValueAt(tableTreat.getSelectedRow(), 0).toString();

//            System.out.println(treatVal);
            JTextField treatText=new JTextField(15);
            treatText.setText(treatVal);
            
            JPanel editPanel = new JPanel();
            editPanel.add(new JLabel("Treatment:"));
            editPanel.add(treatText);

            int result = JOptionPane.showConfirmDialog(null, editPanel,"Edit", JOptionPane.OK_CANCEL_OPTION);
        
            
            if (result == JOptionPane.OK_OPTION) {
                x=treatText.getText();
                String sqlTreat="update treatment set tname='"+x+"' where tname='"+treatVal+"';";
                System.out.println(sqlTreat);

                try{
                    sqlConn sc=new sqlConn();
                    sc.stmt.executeUpdate(sqlTreat);
                    System.out.println("Successfully entered data");
                    this.dispose();
                    treatment t=new treatment();
                    t.setVisible(true);
                    JOptionPane.showMessageDialog(null, "Successfully entered data");


                }catch(Exception e){
                    System.out.println(e);
                    String message = "\"Error\"\n"
                    + "\"Value is incorrect or too long\"\n";
                    JOptionPane.showMessageDialog(new JFrame(), message, "Dialog",
                    JOptionPane.ERROR_MESSAGE);
                }
            }
        }catch(Exception e){
            String message = "\"Activity not selected\"\n"
            + "\"Click on row to highlight\"\n";
            JOptionPane.showMessageDialog(new JFrame(), message, "Dialog",
            JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        // TODO add your handling code here:
        String m;
        try{
            m=tableTreat.getValueAt(tableTreat.getSelectedRow(), 0).toString();

            JDialog.setDefaultLookAndFeelDecorated(true);
            int response = JOptionPane.showConfirmDialog(null, "Do you really want to delete?", "Confirm",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.NO_OPTION) {
                System.out.println("No button clicked");
            }else if (response == JOptionPane.YES_OPTION) {
                try{
                    String sql="delete from treatment where tname='"+m+"';";
                    System.out.println(sql);
                    sqlConn sc=new sqlConn();
                    sc.stmt.executeUpdate(sql);
                    this.dispose();
                    treatment t=new treatment();
                    t.setVisible(true);
                }catch(Exception e){
                    System.out.println(e);
                }
                

            } else if (response == JOptionPane.CLOSED_OPTION) {
              System.out.println("JOptionPane closed");
            }
        }catch(Exception e){
            String message = "\"Treatment not selected\"\n"
            + "\"Click on row to highlight\"\n";
            JOptionPane.showMessageDialog(new JFrame(), message, "Dialog",
            JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_btnDelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(treatment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(treatment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(treatment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(treatment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new treatment().setVisible(true);
            }
        });
    }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton btnAdd;
        private javax.swing.JButton btnDel;
        private javax.swing.JButton btnEdit;
        private javax.swing.JLabel jLabel6;
        // End of variables declaration//GEN-END:variables
}
